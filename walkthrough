1. creating EKS Cluster with 2 t3.small nodes:

1.1. cluster.yaml contents:
$ cat cluster.yaml 
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: pfw2-cluster
  region: us-east-1

nodeGroups:
  - name: pfw2-nodegroup
    instanceType: t3.small
    desiredCapacity: 2

1.2. cluster creation command:
$ eksctl create cluster -f cluster.yaml 

2. Deploying PHP application using Kuberetes:

2.1. PHP file creation:
$ cat index1.php 
<html>
  <head>
    <title>Current Date and Time</title>
  </head>
  <body>
    <h1>Current DevOps Date and Time</h1>
    <p>
      <?php echo "The current date and time is: " . date("Y-m-d H:i:s"); ?>
    </p>
  </body>
</html>

2.2. Creating Docker file for PHP application image:

$ cat Dockerfile 

FROM php:8.2.5RC1-apache-bullseye

COPY index1.php /var/www/html/

EXPOSE 80

2.3. Docker image creation
$ docker buildx build -t pfw2:latest -f Dockerfile .

2.4. Creating pfw2 repository online @ hub.docker.com

2.5. Tagging docker image for further pushing
$ docker tag pfw2:latest pchmykh/pfw2:001

2.6. Pushing docker image:
$ docker push pchmykh/pfw2:001

2.7. Applaying image using kubectl:
kubectl apply -f phpapplication.yaml

3. Deploying ingress:

3.1. Deploying ingress controller:





2.2.1. 


- и подключить мониторинг, используя Grafana, Prometheus.
- Веб-приложение должно быть доступно через браузер.
- Деплой приложения должен происходить через CI/CD инструмент.

2) Создать EKS cluster с двумя нодами t3.small. Задеплоить любое веб-приложение в Kubernetes и подключить мониторинг, используя Grafana, Prometheus. Веб-приложение должно быть доступно через браузер. Деплой приложения должен происходить через CI/CD инструмент.
